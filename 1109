mock表示这个api返回的数据是假的  仅作测试用
server表示需要启动这个服务

契约测试：
工具的约定

-------------------------------------------------------------------------------------------------------------
enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中。


>>>seasons = ['Spring', 'Summer', 'Fall', 'Winter']
>>> list(enumerate(seasons))
[(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')]
>>> list(enumerate(seasons, start=1))       # 下标从 1 开始
[(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')]



QPS    ,CPU 了解
中级：自动化
高级：工具开发

----------------------------------------------
输入框：测试思路【思考框架】
----------------------------------------------
功能性； 常规可输入的内容，如 字符串，数字 ，特殊字符，转义字符
        非常规的，html标签，css ， JavaScript代码，url，tag（div等标签；定义高度宽度 ，id ，classname。。。
        输入内容的边界；空字符，超长文本，边界值+1，边界值-1
        
兼容性；  用户分布，产品品牌，分辨率，topN的机型

稳定性；  在某一压力下，搜索，结果可以正常返回
          多次查询，返回的内容相对稳定
          
性能；  QPS  Query Per Second,每秒能处理的请求数
        从点击开始到页面完全加载，平均耗时时间
        加载的页面大小，资源，（JS  ,CSS文件）的数量
        
安全；  SQL注入，JS注入  

接口；  查询接口正确性
        接口对一些异常情况的容错处理
        查询接口在非浏览器环境的处理情况

线上监控；保证线上服务质量，建立实施监控
          监控，及时发现异常情况，降低对用户的影响

自动化；Selenium  UI自动化
        例行回归验证，提高效率
        Ios ----  WDA
        Android --- uiautomator --- appium
        
 ====================================================================================
 表现得能力：
 技术能力；
 管理能力；
 学习能力；
 团队协助能力；
 --------------------------
 文案简洁，格式清晰
 
 工作内容：描述  【数量质量】
 学习能力：“保证项目质量和进度”
 
 
------------------------------------------------------------------------


移动端工具： monkey ，monkeyrunner ， ADB
移动端自动化框架： robotium ， appium ， uiautomator，selenium
平台： windows ，linux ， Android ， ios
服务端：loadrunner，jmeter
数据库：mysql可视化工具 ，navicat
-------------------------------------------------------------------------


工作效率？？成果？？
如何安排任务，如何提高测试效率
工作中的成果
如何团队间协调工作

--------------------------------------------------------------------------
问题得背后：【体现】
看人品，
看能力，
看态度
--------------------------------------------------------------------------

=====================================================================================
测试基本阶段： 单元测试
              集成测试
              系统测试
              验收测试
              
需求沟通 --- 制定测试方案 --- 设计测试用例 --- 准备测试环境 -- 测试执行 --- bug处理 -- 回归验收 --- 线上跟进 -- 




等价类   
边界值 
错误推测法   
正交表






测试理论；如何分层自动化测试：  UI自动化回归
                             接口自动化
                             单元测试-白盒测试
                             
                             
         如何降低自动化维护成本：UI自动化，针对不常见的页面
                               接口自动化，周期短，变动频繁
                               框架分层，用例与框架分离
         
               
         
         如何保证脚本有效性 ：保证定位有效性（封装），封装处理异常
                             保证流程有消息，封装独立方法
                             保证数据有效性，数据备份与恢复
                             
         常见的测试覆盖类型：语句覆盖
                            判定覆盖
                            条件覆盖
                            条件组合覆盖
                            路径覆盖
                            
                            
         B/S   和C/S区别
         
         
         安全性测试 包含：用户访问认证
                         传输数据加密
                         安全防护策略：安全日志，入侵检测，隔离防护，漏洞扫描
                         数据库备份与恢复
                         防病毒系统
                         SQL注入,JS注入
                         
         
         
         
         
         测试报告包含哪些内容：
                            测试背景说明
                            测试范围说明
                            测试环境说明
                            测试方法说明
                            测试结果结论
                            质量或风险评估
                            
                            
                            
                            
           Bug类型：
           bug：代码编写错误导致
           defect：缺陷，实现和需求不一致
           fault：由于环境系统问题引起的
         
         【4-2】
         

python常见得问题

python常问算法

linux

计算机网络

操作系统

数据库

fiddler功能

安卓系统相关

adb相关

monkey相关





